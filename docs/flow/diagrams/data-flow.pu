@startuml data-flow
'left to right direction
skinparam Monochrome true

note "Data after going though Data Gateway is wrapped\n inside an Environment Message, this message is\n'open' in each container so that data can be accessed.\n Then, once the work is done the message is 'sealed',\n routing keys are changed and the message is sent.\nFor brevity this process is not detailed everywhere" as N1

state "Data Relayer" as DataRelayer
state "Data Gateway" as DataGateway
state decoded_or_encoded <<choice>>
state "Data Processor Slave" as Processor
state "Data Decoder Slave" as Decoder
state "Identity Management Slave" as Identity
state "Data Validator" as Validator
state "Device Management Slave" as Records
state data_type <<choice>>
state "Fleet Management" as Fleet
state "Smart Irrigation" as Irrigation
state "Alert Dispatcher" as Alert

DataRelayer : Any data can be received
DataRelayer : as the body of an HTTP POST

DataGateway : Data is wraped in a
DataGateway : Environment Message with
DataGateway : specific routing keys

Processor : Data is transformed according
Processor : to the defined mapper for the
Processor : type of device that sent the data

Decoder : Data is transformed according
Decoder : to the defined script for the
Decoder : type of device that sent the data

Identity : Domain ownership details are
Identity : added to the data

Validator : Data is examined to determine
Validator : if it is valid or not

Records : Device information details
Records : are added to the data

Fleet : Data is stored
Fleet : and sent to Frontend

Irrigation: Data is stored
Irrigation: and sent to Frontend

Alert: Data is analised and
Alert: alerts are produced
Alert: based on rules

[*] --> DataRelayer
DataRelayer -> DataGateway
DataGateway -> decoded_or_encoded
decoded_or_encoded --> Processor : decoded data
decoded_or_encoded --> Decoder : encoded data
Decoder --> Identity
Processor --> Identity

Identity -> Records

Records --> Validator

Records ---> Identity : each sub device\ndata is sub processed

Validator --> data_type

data_type --> Fleet : data is valid, has\ngps details

data_type --> Irrigation : data is valid, has gps, air humidity and\ntemperature details
data_type --> Irrigation : data is valid, has gps, illuminance and\nsoil moisture details
data_type --> Irrigation : data is valid, has gps and\ntrigger details

data_type -> Alert : data is valid

@enduml
