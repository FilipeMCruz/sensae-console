SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

DROP DATABASE IF EXISTS irrigation;

CREATE DATABASE irrigation WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE = 'en_US.utf8';

ALTER DATABASE irrigation OWNER TO "user";

\connect irrigation

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

create table if not exists public.devices
(
    persistence_id bigint generated by default as identity (maxvalue 2147483647) primary key,
    device_type    varchar(255),
    device_id      varchar(255) constraint devices_unique_id unique
);

alter table public.devices
    owner to "user";

create table if not exists public.ledger_entries
(
    persistence_id bigint generated by default as identity (maxvalue 2147483647) primary key,
    device_id      varchar(255),
    device_name    varchar(255),
    open_at        timestamp,
    close_at       timestamp,
    latitude       varchar(255),
    longitude      varchar(255),
    altitude       varchar(255),
    ownership      text,
    remote_control boolean default false not null
);

alter table public.ledger_entries
    owner to "user";

create table if not exists public.records
(
    persistence_id       bigint generated by default as identity (maxvalue 2147483647) primary key,
    entry_persistence_id bigint constraint records_entry_fkey references public.ledger_entries,
    label                varchar(255),
    content              varchar(255)
);

alter table public.records
    owner to "user";

create table if not exists public.gardening_area_boundary
(
    persistence_id bigint generated by default as identity (maxvalue 2147483647) primary key,
    area_id        varchar(255),
    position       smallint,
    latitude       varchar(255),
    longitude      varchar(255),
    altitude       varchar(255)
);

alter table public.gardening_area_boundary
    owner to "user";

create table if not exists public.gardening_area
(
    persistence_id bigint generated by default as identity (maxvalue 2147483647) primary key,
    id             varchar(255),
    name           varchar(255),
    hidden         boolean default false not null
);

alter table public.gardening_area
    owner to "user";

create table if not exists public.gardening_area_owner
(
    area_id        varchar(255),
    persistence_id bigint generated by default as identity (maxvalue 2147483647) primary key,
    domain_id      varchar(255)
);

alter table public.gardening_area_owner
    owner to "user";
