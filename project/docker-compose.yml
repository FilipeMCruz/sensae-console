services:
  message-broker:
    image: rabbitmq:3.10
    container_name: message-broker
    env_file:
      - secrets/prod/message-broker.env
    networks:
      - sensae-network
    ports:
      - 5672
      - 15672
  ui-aggregator:
    build:
      dockerfile: docker/ui-aggregator/Dockerfile
      context: frontend-services
    image: ui-aggregator
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt/
      - /etc/nginx/ssl:/etc/nginx/ssl/
    networks:
      - sensae-network
    ports:
      - 443:443
    depends_on:
      - device-management-frontend
      - data-processor-frontend
      - data-decoder-frontend
      - fleet-management-frontend
      - identity-management-frontend
      - smart-irrigation-frontend
      - rule-management-frontend
      - notification-frontend
  device-management-frontend:
    build:
      dockerfile: docker/device-management-frontend/Dockerfile
      context: frontend-services
    image: device-management-frontend
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt/
      - /etc/nginx/ssl:/etc/nginx/ssl/
    networks:
      - sensae-network
    ports:
      - 443
    depends_on:
      - device-management-master-backend
  data-processor-frontend:
    build:
      dockerfile: docker/data-processor-frontend/Dockerfile
      context: frontend-services
    image: data-processor-frontend
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt/
      - /etc/nginx/ssl:/etc/nginx/ssl/
    networks:
      - sensae-network
    ports:
      - 443
    depends_on:
      - data-processor-master-backend
  data-decoder-frontend:
    build:
      dockerfile: docker/data-decoder-frontend/Dockerfile
      context: frontend-services
    image: data-decoder-frontend
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt/
      - /etc/nginx/ssl:/etc/nginx/ssl/
    networks:
      - sensae-network
    ports:
      - 443
    depends_on:
      - data-decoder-master-backend
  fleet-management-frontend:
    build:
      dockerfile: docker/fleet-management-frontend/Dockerfile
      context: frontend-services
    image: fleet-management-frontend
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt/
      - /etc/nginx/ssl:/etc/nginx/ssl/
    networks:
      - sensae-network
    ports:
      - 443
    depends_on:
      - fleet-management-backend
  identity-management-frontend:
    build:
      dockerfile: docker/identity-management-frontend/Dockerfile
      context: frontend-services
    image: identity-management-frontend
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt/
      - /etc/nginx/ssl:/etc/nginx/ssl/
    networks:
      - sensae-network
    ports:
      - 443
    depends_on:
      - identity-management-backend
  rule-management-frontend:
    build:
      dockerfile: docker/rule-management-frontend/Dockerfile
      context: frontend-services
    image: rule-management-frontend
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt/
      - /etc/nginx/ssl:/etc/nginx/ssl/
    networks:
      - sensae-network
    ports:
      - 443
    depends_on:
      - rule-management-backend
  smart-irrigation-frontend:
    build:
      dockerfile: docker/smart-irrigation-frontend/Dockerfile
      context: frontend-services
    image: smart-irrigation-frontend
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt/
      - /etc/nginx/ssl:/etc/nginx/ssl/
    networks:
      - sensae-network
    ports:
      - 443
    depends_on:
      - smart-irrigation-backend
  notification-management-frontend:
    build:
      dockerfile: docker/notification-management-frontend/Dockerfile
      context: frontend-services
    image: notification-management-frontend
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt/
      - /etc/nginx/ssl:/etc/nginx/ssl/
    networks:
      - sensae-network
    ports:
      - 443
    depends_on:
      - notification-management-backend
  data-relayer:
    build: backend-services/data-relayer
    image: data-relayer
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt/
      - /etc/nginx/ssl:/etc/nginx/ssl/
    networks:
      - sensae-network
    ports:
      - 8443:443
    depends_on:
      - data-gateway
  data-gateway:
    build: backend-services/data-gateway
    image: data-gateway
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/data-gateway.env
    networks:
      - sensae-network
    ports:
      - 8080
  data-processor-slave-backend:
    build: backend-services/data-processor-slave-backend
    image: data-processor-slave-backend
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/data-processor-slave-backend.env
    networks:
      - sensae-network
  data-processor-master-backend:
    build: backend-services/data-processor-master-backend
    image: data-processor-master-backend
    volumes:
      - ./secrets/keys:/etc/ssh/app
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/data-processor-master-backend.env
    networks:
      - sensae-network
    ports:
      - 8080
  data-decoder-master-backend:
    build: backend-services/data-decoder-master-backend
    image: data-decoder-master-backend
    volumes:
      - ./secrets/keys:/etc/ssh/app
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/data-decoder-master-backend.env
    networks:
      - sensae-network
    ports:
      - 8080
  device-management-slave-backend:
    build: backend-services/device-management-slave-backend
    image: device-management-slave-backend
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/device-management-slave-backend.env
    networks:
      - sensae-network
  device-commander-backend:
    build: backend-services/device-commander-backend
    image: device-commander-backend
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/device-commander-backend.env
    networks:
      - sensae-network
  data-decoder-slave-backend:
    build: backend-services/data-decoder-slave-backend
    image: data-decoder-slave-backend
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/data-decoder-slave-backend.env
    networks:
      - sensae-network
  device-management-master-backend:
    build: backend-services/device-management-master-backend
    image: device-management-master-backend
    volumes:
      - ./secrets/keys:/etc/ssh/app
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/device-management-master-backend.env
    networks:
      - sensae-network
    ports:
      - 8080
  data-validator-backend:
    build: backend-services/data-validator-backend
    image: data-validator-backend
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/data-validator-backend.env
    networks:
      - sensae-network
  fleet-management-backend:
    build: backend-services/fleet-management-backend
    container_name: fleet-management-backend
    image: fleet-management-backend
    volumes:
      - ./secrets/keys:/etc/ssh/app
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/fleet-management-backend.env
    networks:
      - sensae-network
    ports:
      - 8080
  smart-irrigation-backend:
    build: backend-services/smart-irrigation-backend
    container_name: smart-irrigation-backend
    image: smart-irrigation-backend
    volumes:
      - ./secrets/keys:/etc/ssh/app
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/smart-irrigation-backend.env
    networks:
      - sensae-network
    ports:
      - 8080
  identity-management-backend:
    build: backend-services/identity-management-backend
    container_name: identity-management-backend
    image: identity-management-backend
    volumes:
      - ./secrets/keys:/etc/ssh/app
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/identity-management-backend.env
    networks:
      - sensae-network
    ports:
      - 8080
  device-ownership-backend:
    build: backend-services/device-ownership-backend
    container_name: device-ownership-backend
    image: device-ownership-backend
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/device-ownership-backend.env
    networks:
      - sensae-network
  rule-management-backend:
    build: backend-services/rule-management-backend
    container_name: rule-management-backend
    image: rule-management-backend
    volumes:
      - ./secrets/keys:/etc/ssh/app
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/rule-management-backend.env
    networks:
      - sensae-network
    ports:
      - 8080
  alert-dispatcher-backend:
    build: backend-services/alert-dispatcher-backend
    container_name: alert-dispatcher-backend
    image: alert-dispatcher-backend
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/alert-dispatcher-backend.env
    networks:
      - sensae-network
  notification-management-backend:
    build: backend-services/notification-management-backend
    container_name: notification-management-backend
    image: notification-management-backend
    volumes:
      - ./secrets/keys:/etc/ssh/app
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/notification-management-backend.env
    networks:
      - sensae-network
    ports:
      - 8080
  notification-dispatcher-backend:
    build: backend-services/notification-dispatcher-backend
    container_name: notification-dispatcher-backend
    image: notification-dispatcher-backend
    environment:
      spring_profiles_active: prod
    env_file:
      - ./secrets/prod/notification-dispatcher-backend.env
    networks:
      - sensae-network
  sharespot-common-database:
    build: databases/sharespot-common-database
    image: sharespot-common-database
    container_name: sharespot-common-database
    env_file:
      - ./secrets/prod/sharespot-common-database.env
    networks:
      - sensae-network
    ports:
      - 5432:5432
    volumes:
      - ./databases-data/prod/sharespot-common-database:/var/lib/postgresql/data/
  questdb:
    image: questdb/questdb:6.3.1
    container_name: questdb
    networks:
      - sensae-network
    ports:
      - 8812
      - 9000
      - 9003
    volumes:
      - ./databases-data/prod/questdb:/root/.questdb/
  irrigation-database:
    image: questdb/questdb:6.3.1
    container_name: irrigation-database
    networks:
      - sensae-network
    ports:
      - 8812
      - 9000
      - 9003
    volumes:
      - ./databases-data/prod/irrigation-database:/root/.questdb/
  # data-store:
  #   build: backend-services/data-store
  #   image: data-store
  #   environment:
  #     spring_profiles_active: prod
  #   env_file:
  #     - ./secrets/prod/data-store-backend.env
  #   networks:
  #     - sensae-network
  #   ports:
  #     - 8080
  # data-store-database:
  #   image: mongo:latest
  #   container_name: data-store-database
  #   env_file:
  #     - ./secrets/prod/data-store-database.env
  #   networks:
  #     - sensae-network
  #   ports:
  #     - 27017
  #   volumes:
  #     - ./databases-data/prod/data-store-database:/data/db
  #     - ./secrets/prod/init-data-store-database.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
networks:
  sensae-network:
